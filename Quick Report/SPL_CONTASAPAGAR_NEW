WITH SUBTB1 AS (SELECT G.COMPANY, G.PARTY_TYPE_DB, I.SERIES_ID, I.INVOICE_NO, G.VOUCHER_NO, G.VOUCHER_TYPE, SUM(ABS(G.AMOUNT)) AS VALTOT
     FROM IFSGFT.INC_INV_UTIL_VOU_QRY G
    INNER JOIN IFSGFT.INVOICE I ON (G.INVOICE_ID = I.INVOICE_ID AND G.COMPANY = I.COMPANY)
    WHERE G.VOUCHER_TYPE IN ('I','J','CC','EMP','PI')
      AND G.POSTING_TYPE IN ('IP18','M93','MANUAL','M18','M65','EXTERNAL')
      AND G.AMOUNT <> 0
    GROUP BY G.COMPANY, G.INVOICE_ID, G.PARTY_TYPE_DB, G.VOUCHER_NO, G.VOUCHER_TYPE, I.INVOICE_NO, I.SERIES_ID),

SUBTB2 AS (SELECT G.COMPANY, G.PARTY_TYPE_DB, I.SERIES_ID AS REFERENCE_SERIE, I.INVOICE_NO AS REFERENCE_NUMBER, ABS(G.AMOUNT) AS CURRENCY_DEBET_AMOUNT, A.VALTOT,
ABS(G.AMOUNT) / A.VALTOT AS PERC, G.CODE_A, G.CODE_B, G.CODE_C, G.CODE_D, G.CODE_E, G.CODE_F, G.CODE_G, G.CODE_H, G.CODE_I, G.CODE_J, G.POSTING_TYPE, G.VOUCHER_NO, G.VOUCHER_TYPE, G.IDENTITY
     FROM IFSGFT.INC_INV_UTIL_VOU_QRY G
    INNER JOIN IFSGFT.INVOICE I ON (G.INVOICE_ID = I.INVOICE_ID AND G.COMPANY = I.COMPANY)
    INNER JOIN SUBTB1 A ON (G.COMPANY = A.COMPANY AND G.PARTY_TYPE_DB = A.PARTY_TYPE_DB AND I.SERIES_ID = A.SERIES_ID AND I.INVOICE_NO = A.INVOICE_NO AND G.VOUCHER_NO = A.VOUCHER_NO AND G.VOUCHER_TYPE = A.VOUCHER_TYPE)
    LEFT JOIN IFSGFT.INVOICE_LEDGER_ITEM_SU_QRY X ON (G.COMPANY = X.COMPANY AND G.PARTY_TYPE_DB = A.PARTY_TYPE_DB AND G.IDENTITY = X.IDENTITY AND I.SERIES_ID = X.LEDGER_ITEM_SERIES_ID AND I.INVOICE_NO = X.LEDGER_ITEM_ID AND G.VOUCHER_NO = X.VOUCHER_NO_REF AND G.VOUCHER_TYPE = X.VOUCHER_TYPE_REF AND X.OBJSTATE <> 'Cancelled')
    WHERE G.VOUCHER_TYPE IN ('I','J','CC','EMP','PI')
      AND G.POSTING_TYPE IN ('IP18','M93','MANUAL','M18','M65','EXTERNAL')
      AND G.AMOUNT <> 0
      AND I.objstate <> 'Cancelled')
SELECT  PAGAMENTOS.BLOCO, PAGAMENTOS.COMPANY AS EMPRESA,
       PAGAMENTOS.IDENTITY AS ID,
       IFSGFT.SUPPLIER_INFO_API.GET_NAME(PAGAMENTOS.IDENTITY) AS NOME,
       PAGAMENTOS.ID_SERIE AS SERIE,
       PAGAMENTOS.TITULO_EXTRATO,
       PAGAMENTOS.INSTALLMENT_ID AS PARCELA,
       PAGAMENTOS.VENCTO_ORIGINAL,
       PAGAMENTOS.DATA_VENCTO AS VENCTO,
       PAGAMENTOS.DATA_LANCTO,
       PAGAMENTOS.DATA_TITULO,
       PAGAMENTOS.LANCTO,
       PAGAMENTOS.TIPO_LANCTO,
       PAGAMENTOS.MOEDA,
       CASE WHEN SIGN(PAGAMENTOS.VALOR_PARCELA) = -1 THEN -PAGAMENTOS.VALOR_PARCELA ELSE PAGAMENTOS.VALOR_PARCELA END VALOR_PARCELA,
       CASE WHEN SIGN(PAGAMENTOS.VALOR_ABERTO) = -1 THEN -PAGAMENTOS.VALOR_ABERTO ELSE PAGAMENTOS.VALOR_ABERTO END VALOR_ABERTO,
       CASE WHEN SIGN(PAGAMENTOS.VALOR_CONTABIL_PARCELA) = -1 THEN -PAGAMENTOS.VALOR_CONTABIL_PARCELA ELSE PAGAMENTOS.VALOR_CONTABIL_PARCELA END VALOR_CONTABIL_PARCELA,
       CASE WHEN SIGN(PAGAMENTOS.VALOR_CONTABIL_ABERTO) = -1 THEN -PAGAMENTOS.VALOR_CONTABIL_ABERTO ELSE PAGAMENTOS.VALOR_CONTABIL_ABERTO END VALOR_CONTABIL_ABERTO,
       CASE WHEN SIGN(PAGAMENTOS.TOTAL_VALOR_IMPOSTOS) = -1 THEN -PAGAMENTOS.TOTAL_VALOR_IMPOSTOS ELSE PAGAMENTOS.TOTAL_VALOR_IMPOSTOS END TOTAL_VALOR_IMPOSTOS,
       CASE WHEN SIGN(PAGAMENTOS.VALOR_LIQUIDO_CONTABIL_ABERTO) = -1 THEN -PAGAMENTOS.VALOR_LIQUIDO_CONTABIL_ABERTO ELSE PAGAMENTOS.VALOR_LIQUIDO_CONTABIL_ABERTO END VALOR_LIQUIDO_CONTABIL_ABERTO,
       PAGAMENTOS.PAY_DATE AS DATA_PAGTO,
       PAGAMENTOS.REFERENCIA_PAGAMENTO AS REFERENCIA,
       PAGAMENTOS.STATE AS STATUS_TITULO,
       PAGAMENTOS.PO_REF_NUMBER AS REF_ORDEM,
       PAGAMENTOS.CONTA_CONTABIL,
       PAGAMENTOS.DESC_CONTA,
       PAGAMENTOS.CODE_B AS C_CUSTO,
       IFSGFT.CODE_B_API.GET_DESCRIPTION(PAGAMENTOS.COMPANY, PAGAMENTOS.CODE_B) AS DESCRICAO_C_CUSTO,
       PAGAMENTOS.CODE_E AS A_FIXO,
       IFSGFT.CODE_E_API.GET_DESCRIPTION(PAGAMENTOS.COMPANY, PAGAMENTOS.CODE_E) AS DESCRICAO_A_FIXO,
       PAGAMENTOS.CODE_D AS LINHA_SERVICO,
       IFSGFT.CODE_D_API.GET_DESCRIPTION(PAGAMENTOS.COMPANY, PAGAMENTOS.CODE_D) AS DESC_LINHA_SERVICO,
       PAGAMENTOS.CODE_C AS PROJETO,
       IFSGFT.CODE_C_API.GET_DESCRIPTION(PAGAMENTOS.COMPANY, PAGAMENTOS.CODE_C) AS DESCRICAO_PROJETO,
       PAGAMENTOS.CODE_F,
       IFSGFT.CODE_F_API.GET_DESCRIPTION(PAGAMENTOS.COMPANY, PAGAMENTOS.CODE_F) AS CODE_F_DESCRIPTION,
       PAGAMENTOS.CODE_G,
       IFSGFT.CODE_G_API.GET_DESCRIPTION(PAGAMENTOS.COMPANY, PAGAMENTOS.CODE_G) AS CODE_G_DESCRIPTION,
       PAGAMENTOS.CODE_H,
       IFSGFT.CODE_H_API.GET_DESCRIPTION(PAGAMENTOS.COMPANY, PAGAMENTOS.CODE_H) AS CODE_H_DESCRIPTION,
       PAGAMENTOS.CODE_I,
       IFSGFT.CODE_I_API.GET_DESCRIPTION(PAGAMENTOS.COMPANY, PAGAMENTOS.CODE_I) AS CODE_I_DESCRIPTION,
       PAGAMENTOS.CODE_J,
       IFSGFT.CODE_J_API.GET_DESCRIPTION(PAGAMENTOS.COMPANY, PAGAMENTOS.CODE_J) AS CODE_J_DESCRIPTION,
       PAGAMENTOS.TIPO_TITULO,
       PAGAMENTOS.STATUS_PARCELA,
       PAGAMENTOS.CONTRAPARTIDA,
       PAGAMENTOS.CONTRAPARTIDA_DESC,
       PAGAMENTOS.GRP_FORNEC AS GRP_CONTABIL,
       PAGAMENTOS.DATA_RECEB,
       PAGAMENTOS.BANCO,
       PAGAMENTOS.CONTA,
       CASE WHEN SIGN(PAGAMENTOS.VALOR_PAGO) = -1 THEN -PAGAMENTOS.VALOR_PAGO ELSE PAGAMENTOS.VALOR_PAGO END VALOR_PAGO,
       PAGAMENTOS.DATE_REG,
       PAGAMENTOS.ORIGEM,
       PAGAMENTOS.REALIZADO
  FROM (SELECT  'BLOCO 01' BLOCO,
               T.COMPANY,
               T.LEDGER_ITEM_SERIES_ID AS ID_SERIE,
               T.LEDGER_ITEM_ID AS TITULO_EXTRATO,
               T.INSTALLMENT_ID,
               P.PAY_DATE,
               T.IDENTITY,
               I.PO_REF_NUMBER ,
               IFSGFT.INVOICE_API.GET_PAYMENT_REFERENCE(T.COMPANY, IFSGFT.invoice_API.Get_Invoice_Id_db(t.company, t.identity, t.party_type, t.ledger_item_series_id, t.ledger_item_id)) AS REFERENCIA_PAGAMENTO,
               IFSGFT.IDENTITY_INVOICE_INFO_API.GET_GROUP_ID_FOR_DB(T.COMPANY, T.IDENTITY, T.PARTY_TYPE) AS GRP_FORNEC,
               P.PAY_DATE AS DATA_TITULO,
               P.PAY_DATE AS DATA_RECEB,
               P.PAY_DATE AS DATA_VENCTO,
               IFSGFT.CASH_ACCOUNT_API.GET_INSTITUTE_ID(P.COMPANY, P.SHORT_NAME) AS BANCO,
               P.SHORT_NAME AS CONTA,
               T.CURRENCY AS MOEDA,
               P.VOUCHER_NO AS LANCTO,
               P.VOUCHER_TYPE AS TIPO_LANCTO,
               NVL(A.PERC * (T.CURR_AMOUNT - NVL(T.DISC_CURR_AMOUNT, 0) + NVL(T.FINE_CURR_AMOUNT, 0) + NVL(T.INTEREST_CURR_AMOUNT, 0)), T.CURR_AMOUNT - NVL(T.DISC_CURR_AMOUNT, 0) + NVL(T.FINE_CURR_AMOUNT, 0) + NVL(T.INTEREST_CURR_AMOUNT, 0)) AS VALOR_PAGO,
               NVL(IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_REG_DATE_ADV(T.COMPANY, P.PAY_DATE, P.VOUCHER_TYPE, P.VOUCHER_NO), P.VOUCHER_DATE) DATE_REG,
               NVL(A.CODE_A, IFSGFT.SPL_cash_flow_util_api.Get_Pay_Acc_By_Post_Type(t.company, t.series_id, t.payment_id, '%', t.ledger_item_id)) AS CONTA_CONTABIL,
               NVL(IFSGFT.ACCOUNT_API.GET_DESCRIPTION(T.COMPANY, A.CODE_A), IFSGFT.ACCOUNT_API.GET_DESCRIPTION(T.COMPANY, IFSGFT.SPL_cash_flow_util_api.Get_Pay_Acc_By_Post_Type(t.company, t.series_id, t.payment_id, '%', t.ledger_item_id))) AS DESC_CONTA,
               IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_PAY_ACC_BY_POST_TYPE(T.COMPANY, T.SERIES_ID, T.PAYMENT_ID, 'PP1', T.LEDGER_ITEM_ID) CONTRAPARTIDA,
               IFSGFT.ACCOUNT_API.GET_DESCRIPTION(T.COMPANY, IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_PAY_ACC_BY_POST_TYPE(T.COMPANY, T.SERIES_ID, T.PAYMENT_ID, 'PP1', T.LEDGER_ITEM_ID)) CONTRAPARTIDA_DESC,
               IFSGFT.PAYMENT_PLAN_API.GET_DUE_DATE(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID) VENCTO_ORIGINAL,
               IFSGFT.INVOICE_API.GET_VOUCHER_DATE_REF(T.COMPANY, I.INVOICE_ID) DATA_LANCTO,
               A.PERC * NVL(T.CURR_AMOUNT, 0) VALOR_PARCELA,
               A.PERC * NVL(IFSGFT.PAYMENT_PLAN_API.GET_OPEN_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID), 0) VALOR_ABERTO,
               A.PERC * NVL(IFSGFT.PAYMENT_PLAN_API.GET_DOM_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID), 0) VALOR_CONTABIL_PARCELA,
               A.PERC * NVL(IFSGFT.PAYMENT_PLAN_API.GET_OPEN_DOM_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID), 0) VALOR_CONTABIL_ABERTO,
               NVL(IFSGFT.SPL_CASH_FLOW_UTIL_API.CALC_WITHHELD_AMOUNT(T.COMPANY,
                                                               T.IDENTITY,
                                                               IFSGFT.PARTY_TYPE_API.DECODE(T.PARTY_TYPE),
                                                               T.LEDGER_ITEM_SERIES_ID,
                                                               T.LEDGER_ITEM_ID,
                                                               T.LEDGER_ITEM_VERSION,
                                                               T.INSTALLMENT_ID,
                                                               IFSGFT.PAYMENT_PLAN_API.GET_OPEN_DOM_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID),
                                                               T.CURRENCY,
                                                               TRUNC(SYSDATE)), 0) TOTAL_VALOR_IMPOSTOS,
               A.PERC * NVL(IFSGFT.PAYMENT_PLAN_API.GET_OPEN_DOM_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID), 0) -
               NVL(IFSGFT.SPL_CASH_FLOW_UTIL_API.CALC_WITHHELD_AMOUNT(T.COMPANY,
                                                               T.IDENTITY,
                                                               IFSGFT.PARTY_TYPE_API.DECODE(T.PARTY_TYPE),
                                                               T.LEDGER_ITEM_SERIES_ID,
                                                               T.LEDGER_ITEM_ID,
                                                               T.LEDGER_ITEM_VERSION,
                                                               T.INSTALLMENT_ID,
                                                               IFSGFT.PAYMENT_PLAN_API.GET_OPEN_DOM_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID),
                                                               T.CURRENCY,
                                                               TRUNC(SYSDATE)), 0) VALOR_LIQUIDO_CONTABIL_ABERTO,
               I.STATE,
               A.CODE_B,
               A.CODE_C,
               A.CODE_D,
               A.CODE_E,
               A.CODE_F,
               A.CODE_G,
               A.CODE_H,
               A.CODE_I,
               A.CODE_J,
               IFSGFT.INVOICE_TYPE_API.GET_DESCRIPTION_DB(T.COMPANY, T.PARTY_TYPE, I.INVOICE_ID) AS TIPO_TITULO,
               IFSGFT.PAYMENT_PLAN_API.GET_STATE(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID) AS STATUS_PARCELA,
               'PAGAMENTO REALIZADO' AS ORIGEM,
               DECODE(T.CURRENCY, 'BRL', NVL(A.PERC * (T.CURR_AMOUNT - NVL(T.DISC_CURR_AMOUNT, 0) + NVL(T.FINE_CURR_AMOUNT, 0) + NVL(T.INTEREST_CURR_AMOUNT, 0)), T.CURR_AMOUNT - NVL(T.DISC_CURR_AMOUNT, 0) + NVL(T.FINE_CURR_AMOUNT, 0) + NVL(T.INTEREST_CURR_AMOUNT, 0)), A.PERC * NVL(IFSGFT.PAYMENT_PLAN_API.GET_DOM_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID), 0)) AS REALIZADO
          FROM IFSGFT.PAYMENT_TRANSACTION_TAB T
          INNER JOIN IFSGFT.PAYMENT P ON (T.COMPANY = P.COMPANY AND T.PAYMENT_ID = P.PAYMENT_ID AND T.SERIES_ID = P.SERIES_ID)
         LEFT JOIN IFSGFT.INVOICE I ON (T.COMPANY = I.COMPANY AND T.IDENTITY = I.IDENTITY AND T.PARTY_TYPE = I.PARTY_TYPE_DB AND T.LEDGER_ITEM_SERIES_ID = I.SERIES_ID AND T.LEDGER_ITEM_ID = I.INVOICE_NO)
          LEFT JOIN SUBTB2 A ON (T.COMPANY = A.COMPANY AND T.IDENTITY = A.IDENTITY AND T.PARTY_TYPE = A.PARTY_TYPE_DB AND T.LEDGER_ITEM_SERIES_ID = A.REFERENCE_SERIE AND T.LEDGER_ITEM_ID = A.REFERENCE_NUMBER)
         WHERE (T.ROWTYPE = 'LedgerTransaction')
           AND (P.PAYMENT_ROLLBACK_STATUS_DB <> 'ROLLBACK')
           AND (T.PARTY_TYPE = 'SUPPLIER')
           AND (T.ROLLEDBACK = 'FALSE')
           AND (P.PAYMENT_TYPE_CODE_DB NOT IN ('TAXWITHHOLD','SUPPREPOSTING','SUPPOFF'))
           AND (IFSGFT.invoice_API.Get_Adv_Inv(t.company, IFSGFT.invoice_API.Get_Invoice_Id_db(t.company, t.identity, t.party_type, t.ledger_item_series_id, t.ledger_item_id)) = 'FALSE')
           AND (T.LEDGER_ITEM_SERIES_ID NOT IN ('SUPIA','SUPOA'))
           AND (IFSGFT.CASH_ACCOUNT_API.GET_INSTITUTE_ID(P.COMPANY, P.SHORT_NAME) IS NOT NULL)
           AND (T.CURR_AMOUNT <> 0)
           AND (I.OBJSTATE <> 'Cancelled')
          -- AND (IFSGFT.INVOICE_API.Get_Objstate(T.COMPANY, IFSGFT.invoice_API.Get_Invoice_Id_db(t.company, t.identity, t.party_type, t.ledger_item_series_id, t.ledger_item_id)) <> 'Cancelled')
         UNION ALL
       SELECT  'BLOCO 02' BLOCO,
               T.COMPANY,
               T.LEDGER_ITEM_SERIES_ID AS ID_SERIE,
               T.LEDGER_ITEM_ID AS TITULO_EXTRATO,
               T.INSTALLMENT_ID,
               P.PAY_DATE,
               T.IDENTITY,
               I.PO_REF_NUMBER ,
               IFSGFT.INVOICE_API.GET_PAYMENT_REFERENCE(T.COMPANY, IFSGFT.invoice_API.Get_Invoice_Id_db(t.company, t.identity, t.party_type, t.ledger_item_series_id, t.ledger_item_id)) AS REFERENCIA_PAGAMENTO,
               IFSGFT.IDENTITY_INVOICE_INFO_API.GET_GROUP_ID_FOR_DB(T.COMPANY, T.IDENTITY, T.PARTY_TYPE) AS GRP_FORNEC,
               P.PAY_DATE AS DATA_TITULO,
               P.PAY_DATE AS DATA_RECEB,
               P.PAY_DATE AS DATA_VENCTO,
               IFSGFT.CASH_ACCOUNT_API.GET_INSTITUTE_ID(P.COMPANY, P.SHORT_NAME) AS BANCO,
               P.SHORT_NAME AS CONTA,
               T.CURRENCY AS MOEDA,
               P.VOUCHER_NO AS LANCTO,
               P.VOUCHER_TYPE AS TIPO_LANCTO,
               NVL(A.PERC * (T.CURR_AMOUNT - NVL(T.DISC_CURR_AMOUNT, 0) + NVL(T.FINE_CURR_AMOUNT, 0) + NVL(T.INTEREST_CURR_AMOUNT, 0)), T.CURR_AMOUNT - NVL(T.DISC_CURR_AMOUNT, 0) + NVL(T.FINE_CURR_AMOUNT, 0) + NVL(T.INTEREST_CURR_AMOUNT, 0)) AS VALOR_PAGO,
               NVL(IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_REG_DATE_ADV(T.COMPANY, P.PAY_DATE, P.VOUCHER_TYPE, P.VOUCHER_NO), P.VOUCHER_DATE) DATE_REG,
               NVL(A.CODE_A, IFSGFT.SPL_cash_flow_util_api.Get_Pay_Acc_By_Post_Type(t.company, t.series_id, t.payment_id, '%', t.ledger_item_id)) AS CONTA_CONTABIL,
               NVL(IFSGFT.ACCOUNT_API.GET_DESCRIPTION(T.COMPANY, A.CODE_A), IFSGFT.ACCOUNT_API.GET_DESCRIPTION(T.COMPANY, IFSGFT.SPL_cash_flow_util_api.Get_Pay_Acc_By_Post_Type(t.company, t.series_id, t.payment_id, '%', t.ledger_item_id))) AS DESC_CONTA,
               IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_PAY_ACC_BY_POST_TYPE(T.COMPANY, T.SERIES_ID, T.PAYMENT_ID, 'PP1', T.LEDGER_ITEM_ID) CONTRAPARTIDA,
               IFSGFT.ACCOUNT_API.GET_DESCRIPTION(T.COMPANY, IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_PAY_ACC_BY_POST_TYPE(T.COMPANY, T.SERIES_ID, T.PAYMENT_ID, 'PP1', T.LEDGER_ITEM_ID)) CONTRAPARTIDA_DESC,
               IFSGFT.PAYMENT_PLAN_API.GET_DUE_DATE(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID) VENCTO_ORIGINAL,
               IFSGFT.INVOICE_API.GET_VOUCHER_DATE_REF(T.COMPANY, I.INVOICE_ID) DATA_LANCTO,
               A.PERC * NVL(T.CURR_AMOUNT, 0) VALOR_PARCELA,
               A.PERC * NVL(IFSGFT.PAYMENT_PLAN_API.GET_OPEN_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID), 0) VALOR_ABERTO,
               A.PERC * NVL(IFSGFT.PAYMENT_PLAN_API.GET_DOM_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID), 0) VALOR_CONTABIL_PARCELA,
               A.PERC * NVL(IFSGFT.PAYMENT_PLAN_API.GET_OPEN_DOM_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID), 0) VALOR_CONTABIL_ABERTO,
               NVL(IFSGFT.SPL_CASH_FLOW_UTIL_API.CALC_WITHHELD_AMOUNT(T.COMPANY,
                                                               T.IDENTITY,
                                                               IFSGFT.PARTY_TYPE_API.DECODE(T.PARTY_TYPE),
                                                               T.LEDGER_ITEM_SERIES_ID,
                                                               T.LEDGER_ITEM_ID,
                                                               T.LEDGER_ITEM_VERSION,
                                                               T.INSTALLMENT_ID,
                                                               IFSGFT.PAYMENT_PLAN_API.GET_OPEN_DOM_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID),
                                                               T.CURRENCY,
                                                               TRUNC(SYSDATE)), 0) TOTAL_VALOR_IMPOSTOS,
               A.PERC * NVL(IFSGFT.PAYMENT_PLAN_API.GET_OPEN_DOM_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID), 0) -
               NVL(IFSGFT.SPL_CASH_FLOW_UTIL_API.CALC_WITHHELD_AMOUNT(T.COMPANY,
                                                               T.IDENTITY,
                                                               IFSGFT.PARTY_TYPE_API.DECODE(T.PARTY_TYPE),
                                                               T.LEDGER_ITEM_SERIES_ID,
                                                               T.LEDGER_ITEM_ID,
                                                               T.LEDGER_ITEM_VERSION,
                                                               T.INSTALLMENT_ID,
                                                               IFSGFT.PAYMENT_PLAN_API.GET_OPEN_DOM_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID),
                                                               T.CURRENCY,
                                                               TRUNC(SYSDATE)), 0) VALOR_LIQUIDO_CONTABIL_ABERTO,
               I.STATE,
               A.CODE_B,
               A.CODE_C,
               A.CODE_D,
               A.CODE_E,
               A.CODE_F,
               A.CODE_G,
               A.CODE_H,
               A.CODE_I,
               A.CODE_J,
               IFSGFT.INVOICE_TYPE_API.GET_DESCRIPTION_DB(T.COMPANY, T.PARTY_TYPE, I.INVOICE_ID) AS TIPO_TITULO,
               IFSGFT.PAYMENT_PLAN_API.GET_STATE(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID) AS STATUS_PARCELA,
               'PAGAMENTO REALIZADO' AS ORIGEM,
               DECODE(T.CURRENCY, 'BRL', NVL(A.PERC * (T.CURR_AMOUNT - NVL(T.DISC_CURR_AMOUNT, 0) + NVL(T.FINE_CURR_AMOUNT, 0) + NVL(T.INTEREST_CURR_AMOUNT, 0)), T.CURR_AMOUNT - NVL(T.DISC_CURR_AMOUNT, 0) + NVL(T.FINE_CURR_AMOUNT, 0) + NVL(T.INTEREST_CURR_AMOUNT, 0)), A.PERC * NVL(IFSGFT.PAYMENT_PLAN_API.GET_DOM_AMOUNT(T.COMPANY, I.INVOICE_ID, T.INSTALLMENT_ID), 0)) AS REALIZADO
          FROM IFSGFT.PAYMENT_TRANSACTION_TAB T
          INNER JOIN IFSGFT.PAYMENT P ON (T.COMPANY = P.COMPANY AND T.PAYMENT_ID = P.PAYMENT_ID AND T.SERIES_ID = P.SERIES_ID)
         LEFT JOIN IFSGFT.INVOICE I ON (T.COMPANY = I.COMPANY AND T.IDENTITY = I.IDENTITY AND T.PARTY_TYPE = I.PARTY_TYPE_DB AND T.LEDGER_ITEM_SERIES_ID = I.SERIES_ID AND T.LEDGER_ITEM_ID = I.INVOICE_NO)
          LEFT JOIN SUBTB2 A ON (T.COMPANY = A.COMPANY AND T.IDENTITY = A.IDENTITY AND T.PARTY_TYPE = A.PARTY_TYPE_DB AND T.LEDGER_ITEM_SERIES_ID = A.REFERENCE_SERIE AND T.LEDGER_ITEM_ID = A.REFERENCE_NUMBER)
         WHERE (T.ROWTYPE = 'LedgerTransaction')
           AND (P.PAYMENT_ROLLBACK_STATUS_DB <> 'ROLLBACK')
           AND (T.PARTY_TYPE = 'SUPPLIER')
           AND (T.ROLLEDBACK = 'FALSE')
           AND (P.PAYMENT_TYPE_CODE_DB NOT IN ('TAXWITHHOLD','SUPPREPOSTING','SUPPOFF'))
           AND (IFSGFT.invoice_API.Get_Adv_Inv(t.company, IFSGFT.invoice_API.Get_Invoice_Id_db(t.company, t.identity, t.party_type, t.ledger_item_series_id, t.ledger_item_id)) = 'FALSE')
           AND (T.LEDGER_ITEM_SERIES_ID IN ('SUPIA','SUPOA'))
           AND (IFSGFT.CASH_ACCOUNT_API.GET_INSTITUTE_ID(P.COMPANY, P.SHORT_NAME) IS NOT NULL)

         UNION ALL
        SELECT  'BLOCO 03' BLOCO,
               MPV.COMPANY,
               '' AS ID_SERIE,
               IFSGFT.MIXED_PAYMENT_API.GET_STATEMENT_NO(PT.COMPANY, PT.MIXED_PAYMENT_ID) AS TITULO_EXTRATO,
               1 AS PARCELA,
               MP.VOUCHER_DATE,
               MPV.IDENTITY,
               IFSGFT.IDENTITY_INVOICE_INFO_API.GET_GROUP_ID(PT.COMPANY, PT.IDENTITY, PT.PARTY_TYPE) AS GRP_FORNEC,
               ' ' AS REF_ORD_COMPRA,
               IFSGFT.MIXED_PAYMENT_API.GET_VOUCHER_TEXT(PT.COMPANY, PT.MIXED_PAYMENT_ID) AS REFERENCIA_PAGAMENTO,
               MP.VOUCHER_DATE AS DATA_TITULO,
               MP.VOUCHER_DATE AS DATA_RECEB,
               MP.VOUCHER_DATE AS DATA_VENCTO,
               IFSGFT.CASH_ACCOUNT_API.GET_INSTITUTE_ID(PT.COMPANY, PT.SHORT_NAME) AS BANCO,
               PT.SHORT_NAME AS CONTA,
               PT.CURRENCY AS MOEDA,
               MP.VOUCHER_NO AS LANCTO,
               MP.VOUCHER_TYPE AS TIPO_LANCTO,
               MPV.CURR_AMOUNT AS VALOR_PAGO,
               NVL(IFSGFT.VOUCHER_API.GET_DATE_REG(MPV.COMPANY, MP.ACCOUNTING_YEAR, MP.VOUCHER_TYPE, MP.VOUCHER_NO), (SELECT DATE_REG
                                                                                                                 FROM IFSGFT.GEN_LED_VOUCHER
                                                                                                                WHERE COMPANY = MPV.COMPANY
                                                                                                                  AND ACCOUNTING_YEAR = MP.ACCOUNTING_YEAR
                                                                                                                  AND VOUCHER_TYPE = MP.VOUCHER_TYPE
                                                                                                                  AND VOUCHER_NO = MP.VOUCHER_NO)) AS DATE_REG,
               MPV.CODE_A AS CONTA_CONTABIL,
               IFSGFT.ACCOUNT_API.GET_DESCRIPTION(MPV.COMPANY, MPV.CODE_A) AS DESC_CONTA,
               IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_ACC_MIX_PAY(MPV.COMPANY, MPV.VOUCHER_TYPE, MPV.VOUCHER_NO, 'PP1') AS CONTRAPARTIDA,
               IFSGFT.ACCOUNT_API.GET_DESCRIPTION(MPV.COMPANY, IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_ACC_MIX_PAY(MPV.COMPANY, MPV.VOUCHER_TYPE, MPV.VOUCHER_NO, 'PP1')) AS CONTRAPARTIDA_DESC,
               IFSGFT.PAYMENT_PLAN_API.GET_DUE_DATE(PT.COMPANY, I.INVOICE_ID, PT.INSTALLMENT_ID) AS VENCTO_ORIGINAL,
               IFSGFT.INVOICE_API.GET_VOUCHER_DATE_REF(PT.COMPANY, I.INVOICE_ID) AS DATA_LANCTO,
               NVL(IFSGFT.PAYMENT_PLAN_API.GET_CURR_AMOUNT(PT.COMPANY, I.INVOICE_ID, PT.INSTALLMENT_ID), 0) AS VALOR_PARCELA,
               NVL(IFSGFT.PAYMENT_PLAN_API.GET_OPEN_AMOUNT(PT.COMPANY, I.INVOICE_ID, PT.INSTALLMENT_ID), 0) AS VALOR_ABERTO,
               NVL(IFSGFT.PAYMENT_PLAN_API.GET_DOM_AMOUNT(PT.COMPANY, I.INVOICE_ID, PT.INSTALLMENT_ID), 0) AS VALOR_CONTABIL_PARCELA,
               NVL(IFSGFT.PAYMENT_PLAN_API.GET_OPEN_DOM_AMOUNT(PT.COMPANY, I.INVOICE_ID, PT.INSTALLMENT_ID), 0) AS VALOR_CONTABIL_ABERTO,
               NVL(IFSGFT.SPL_CASH_FLOW_UTIL_API.CALC_WITHHELD_AMOUNT(PT.COMPANY,
                                                               PT.IDENTITY,
                                                               IFSGFT.PARTY_TYPE_API.DECODE(PT.PARTY_TYPE),
                                                               PT.LEDGER_ITEM_SERIES_ID,
                                                               PT.LEDGER_ITEM_ID,
                                                               PT.LEDGER_ITEM_VERSION,
                                                               PT.INSTALLMENT_ID,
                                                               IFSGFT.PAYMENT_PLAN_API.GET_OPEN_DOM_AMOUNT(PT.COMPANY, I.INVOICE_ID, PT.INSTALLMENT_ID),
                                                               PT.CURRENCY,
                                                               TRUNC(SYSDATE)), 0) TOTAL_VALOR_IMPOSTOS,
               NVL(IFSGFT.PAYMENT_PLAN_API.GET_OPEN_DOM_AMOUNT(PT.COMPANY, I.INVOICE_ID, PT.INSTALLMENT_ID), 0) -
               NVL(IFSGFT.SPL_CASH_FLOW_UTIL_API.CALC_WITHHELD_AMOUNT(PT.COMPANY,
                                                               PT.IDENTITY,
                                                               IFSGFT.PARTY_TYPE_API.DECODE(PT.PARTY_TYPE),
                                                               PT.LEDGER_ITEM_SERIES_ID,
                                                               PT.LEDGER_ITEM_ID,
                                                               PT.LEDGER_ITEM_VERSION,
                                                               PT.INSTALLMENT_ID,
                                                               IFSGFT.PAYMENT_PLAN_API.GET_OPEN_DOM_AMOUNT(PT.COMPANY, I.INVOICE_ID, PT.INSTALLMENT_ID),
                                                               PT.CURRENCY,
                                                               TRUNC(SYSDATE)), 0) VALOR_LIQUIDO_CONTABIL_ABERTO,
               IFSGFT.INVOICE_API.GET_STATE(PT.COMPANY, I.INVOICE_ID) STATUS_TITULO,
               IFSGFT.INVOICE_TYPE_API.GET_DESCRIPTION_DB(PT.COMPANY, PT.PARTY_TYPE, IFSGFT.INVOICE_API.GET_INVOICE_TYPE(PT.COMPANY, I.INVOICE_ID)) TIPO_TITULO,
               IFSGFT.PAYMENT_PLAN_API.GET_STATE(PT.COMPANY, I.INVOICE_ID, PT.INSTALLMENT_ID) STATUS_PARCELA,
               IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_CODE_PART_VALUE_SUPP(PT.COMPANY, I.INVOICE_ID, '%', 'B') AS CODE_B,
               IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_CODE_PART_VALUE_SUPP(PT.COMPANY, I.INVOICE_ID, '%', 'C') AS CODE_C,
               IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_CODE_PART_VALUE_SUPP(PT.COMPANY, I.INVOICE_ID, '%', 'D') AS CODE_D,
               IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_CODE_PART_VALUE_SUPP(PT.COMPANY, I.INVOICE_ID, '%', 'E') AS CODE_E,
               IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_CODE_PART_VALUE_SUPP(PT.COMPANY, I.INVOICE_ID, '%', 'F') AS CODE_F,
               IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_CODE_PART_VALUE_SUPP(PT.COMPANY, I.INVOICE_ID, '%', 'G') AS CODE_G,
               IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_CODE_PART_VALUE_SUPP(PT.COMPANY, I.INVOICE_ID, '%', 'H') AS CODE_H,
               IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_CODE_PART_VALUE_SUPP(PT.COMPANY, I.INVOICE_ID, '%', 'I') AS CODE_I,
               IFSGFT.SPL_CASH_FLOW_UTIL_API.GET_CODE_PART_VALUE_SUPP(PT.COMPANY, I.INVOICE_ID, '%', 'J') AS CODE_J,
               'PAGAMENTO REALIZADO' ORIGEM,
               DECODE(PT.CURRENCY, 'BRL', MPV.CURR_AMOUNT, NVL(IFSGFT.PAYMENT_PLAN_API.GET_DOM_AMOUNT(PT.COMPANY, I.INVOICE_ID, PT.INSTALLMENT_ID), 0)) AS REALIZADO
          FROM IFSGFT.MIXED_PAYMENT_VOUCHER MPV
         INNER JOIN IFSGFT.MIXED_PAY_VOUCHER_HEAD MP ON (MPV.VOUCHER_NO = MP.VOUCHER_NO AND MPV.VOUCHER_TYPE = MP.VOUCHER_TYPE AND MPV.COMPANY = MP.COMPANY)
         INNER JOIN IFSGFT.MIXED_PAYMENT_LUMP_SUM MPL ON (MP.MIXED_PAYMENT_ID = MPL.MIXED_PAYMENT_ID AND MPV.COMPANY = MPL.COMPANY)
         INNER JOIN IFSGFT.PAYMENT_TRANSACTION_TAB PT ON (MPV.COMPANY = PT.COMPANY AND MP.MIXED_PAYMENT_ID = PT.MIXED_PAYMENT_ID)
         INNER JOIN IFSGFT.INVOICE I ON (PT.COMPANY = I.COMPANY AND PT.IDENTITY = I.IDENTITY AND PT.PARTY_TYPE = I.PARTY_TYPE_DB AND PT.LEDGER_ITEM_SERIES_ID = I.SERIES_ID AND PT.LEDGER_ITEM_ID = I.INVOICE_NO)
         WHERE (MPV.POSTING_TYPE <> 'PP1')
           AND (MPV.CURR_AMOUNT >= 0)
           AND (MPV.IDENTITY IS NULL)
           AND (PT.SHORT_NAME IS NOT NULL)
           AND (PT.ROWTYPE = 'CashTransaction')
           AND (IFSGFT.PAYMENT_API.GET_PAYMENT_ROLLBACK_STATUS_DB(PT.COMPANY, PT.SERIES_ID, PT.PAYMENT_ID) <> 'ROLLBACK')
           AND (PT.ROLLEDBACK = 'FALSE')
           AND (PT.PARTY_TYPE IS NULL)
           AND (PT.MIXED_PAYMENT_ID IS NOT NULL)
           AND (PT.LUMP_SUM_TRANS_ID IS NOT NULL)
           AND (PT.MIXED_PAYMENT_LEDGER_TRANS_ID IS NULL)
           AND (MPL.MIXED_PAYMENT_TRANS_TYPE_DB IN ('DIRECTCASHPAYMENT','BANKFEEPAYMENT'))
           UNION ALL
select  'BLOCO 04' BLOCO,
B.COMPANY,
NULL SERIE,
A.statement_no TITULO_EXTRATO,
1 INSTALLMENT_ID,
MP.voucher_date DATA_PAGAMENTO,
NULL IDENTITY,
NULL REF_ORDEM,
NULL REFERENCIA_PAGAMENTO,
A.voucher_text GRP_CONTABIL,
--ACCOUNT_API.Get_Accnt_Group(B.company,B.code_a) GRP_CONTABIL,
mixed_payment_date DATA_TITULO,
mixed_payment_date DATA_RECEB,
mixed_payment_date VENCTO,
COALESCE(IFSGFT.CASH_ACCOUNT_API.Get_Institute_Id(B.COMPANY,B.COUNTER_CASH_ACCOUNT),IFSGFT.Cash_Account_API.Get_Institute_Description(A.company,A.short_name)) BANCO,
--pt.short_name CONTA,
a.short_name CONTA,
A.currency MOEDA,
VOUCHER_NO_REF LANCTO,
voucher_type_ref TIPO_LANCTO,
B.CURR_AMOUNT VALOR_PAGO,
mixed_payment_date DATE_REG,
NVL(C.code_a, B.code_a) CONTA_CONTABIL,
ACCOUNT_API.Get_Description(B.company,NVL(C.code_a, B.code_a)) DESC_CONTA_CONTABIL,
IFSGFT.SPL_cash_flow_util_api.Get_Acc_Mix_Pay(mp.company, mp.voucher_type, mp.voucher_no, 'PP1') contrapartida_2,
account_API.Get_Description(B.company, IFSGFT.SPL_cash_flow_util_api.Get_Acc_Mix_Pay(mp.company, mp.voucher_type, mp.voucher_no, 'PP1')) contrapartida_desc_2,
mixed_payment_date VENCTO_ORIGINAL,
voucher_date DATA_LANCTO,
B.CURR_AMOUNT VALOR_PARCELA,
0 VALOR_ABERTO,
B.CURR_AMOUNT VALOR_CONTABIL_PARCELA,
0 VALOR_CONTABIL_ABERTO,
0 TOTAL_VALOR_IMPOSTOS,
0 VALOR_LIQUIDO_CONTABIL_ABERTO,
'Pgto Contab' STATUS_TITULO,
B.code_b CENTRO_CUSTO,
B.CODE_C PROJETO,
B.CODE_D LINHA_SERVICO,
B.CODE_E A_FIXO,
b.CODE_F,
B.CODE_G,
B.CODE_H CODE_H,
B.CODE_I,
B.CODE_J,
'Tesouraria' TIPO_TITULO,
'Pago' STATUS_PARCELA,
'PAGAMENTO REALIZADO' ORIGEM,
CASE WHEN SIGN(B.CURR_AMOUNT) = -1 THEN -B.CURR_AMOUNT ELSE B.CURR_AMOUNT END REALIZADO
FROM IFSGFT.mixed_payment_voucher c
JOIN IFSGFT.mixed_pay_voucher_head mp ON (c.voucher_no = mp.voucher_no AND c.voucher_type = mp.voucher_type AND c.company = mp.company)
JOIN IFSGFT.mixed_payment_lump_sum b ON (mp.mixed_payment_id = b.mixed_payment_id AND mp.company = b.company )
JOIN IFSGFT.MIXED_PAYMENT A ON (A.COMPANY = B.COMPANY AND A.MIXED_PAYMENT_ID = B.MIXED_PAYMENT_ID)
WHERE A.VOUCHER_TEXT NOT IN('TRANSFERENCIA ENTRE CONTAS')
and b.curr_amount <= 0
and c.posting_type != 'PP1'
AND B.mixed_payment_trans_type_db IN ('DIRECTCASHPAYMENT','BANKFEEPAYMENT')
AND ABS(C.CURR_AMOUNT) = ABS(B.DOM_AMOUNT)
AND A.STATE <> 'Cancelled') PAGAMENTOS
